name: Android Build & Release

on:
  push:
    branches:
      - main
  workflow_dispatch:  # 手动触发构建

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Android-kotlin-Code  # ⭐ 切换到你的 Kotlin 工程目录

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 🧹 Step 1. 删除旧的 APK 输出目录
      - name: Clean old APKs
        run: |
          echo "清理旧的 APK 文件..."
          rm -rf app/build/outputs/apk/
          mkdir -p app/build/outputs/apk/
          echo "✅ 已清空 app/build/outputs/apk/ 目录"
          ls -R app/build/outputs/apk/ || echo "（目录已空）"

      # 🏗 Step 2. 构建 APK
      - name: Build APK
        run: ./gradlew clean assembleRelease

      # 🕵 Step 3. 打印新的 APK 文件结构
      - name: List generated APKs
        run: ls -R app/build/outputs/apk/

      # 🚀 Step 4. 上传 Release APK 到 GitHub Releases
      - name: Upload Release APKs to GitHub
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ github.run_number }}"
          name: "UUVPN Build #${{ github.run_number }}"
          body: |
            🚀 自动构建成功！
            - 分支: ${{ github.ref_name }}
            - 构建编号: ${{ github.run_number }}
          files: 'app/build/outputs/apk/**/release/*.apk'  # ⭐ 匹配所有 release APK
          overwrite_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
